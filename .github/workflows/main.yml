on: [push]

jobs:
  iot_edge_dev:
    runs-on: ubuntu-latest
    name: run IoT Edge Dev
    steps:  
      - name: Checkout
        uses: actions/checkout@v2
      # To use this repository's private action, you must check out the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'mandur/iotedge-lorawan-starterkit'
          path: 'lora'
      # - name: Azure Login
      #   uses: Azure/login@v1
      #   with:
      #   # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: |
          echo "::set-env name=PKT_FWD_VERSION::1.0.0"
          echo "::set-env name=NET_SRV_VERSION::1.0.0"
          echo "::set-env name=CONTAINER_REGISTRY_USERNAME::1.0.0"
          echo "::set-env name=CONTAINER_REGISTRY_PASSWORD::1.0.0"
          echo "::set-env name=CONTAINER_REGISTRY_ADDRESS::1.0.0"
          echo "::set-env name=NET_SRV_LOGTO_HUB::1.0.0"
          echo "::set-env name=NET_SRV_LOGTO_UDP::1.0.0"
          echo "::set-env name=NET_SRV_IOTEDGE_TIMEOUT::1.0.0"
          echo "::set-env name=NET_SRV_LOG_TO_UDP_ADDRESS::1.0.0"
          echo "::set-env name=EDGEHUB_ROUTE::1.0.0"
          echo "::set-env name=RESET_PIN::1.0.0"
          echo "::set-env name=REGION::1.0.0"
          echo "::set-env name=PKT_FWD_SPI_SPEED::1.0.0"
          echo "::set-env name=PKT_FWD_SPI_DEV::1.0.0"
          echo "::set-env name=FACADE_SERVER_URL::1.0.0"
          echo "::set-env name=NET_SRV_VERSION::1.0.0"
          echo "::set-env name=FACADE_AUTH_CODE::asd"
      - name: Iot Edge Dev
        uses: ./ # Uses an action in the root directory
        id: edgedev_build
        with:
          iothub_connection_string: ${{ secrets.iothubconnectionstring }}